@use 'sass:map';
@use 'sass:color';
@use '@/assets/styles/variables' as variables;
@use '@/assets/styles/_reset.scss';

@forward '@/assets/styles/variables';

:host {
  display: flex;
  flex-direction: var(--direction);
  flex-grow: var(--grow);
  // padding: map.get(variables.$spacing, 4);
  width: var(--width);
}

/**
Spacing
**/

@each $key, $value in variables.$spacing {
  @if ($key != 100) {
    .p-#{$key} {
      padding: $value;
    }

    .px-#{$key} {
      padding-left: $value;
      padding-right: $value;
    }

    .py-#{$key} {
      padding-top: $value;
      padding-bottom: $value;
    }

    .m-#{$key} {
      margin: $value;
    }

    .mx-#{$key} {
      margin-left: $value;
      margin-right: $value;
    }

    .mr-#{$key} {
      margin-right: $value;
    }

    .ml-#{$key} {
      margin-left: $value;
    }

    .my-#{$key} {
      margin-top: $value;
      margin-bottom: $value;
    }

    .gap-#{$key} {
      gap: $value;
    }
  }

  .h-#{$key} {
    height: $value;
  }

  .w-#{$key} {
    width: $value;
  }
}

/**
Display
**/

@each $key in variables.$display {
  .#{$key} {
    display: $key;
  }
}

@each $key in variables.$flex-direction {
  .flex-#{$key} {
    flex-direction: $key;
  }
}

@each $key in variables.$flex-wrap {
  .#{$key} {
    flex-wrap: $key;
  }
}

@each $key, $value in variables.$flex-align {
  .items-#{$key} {
    align-items: $value;
  }

  .justify-content-#{$key} {
    justify-content: $value;
  }
}

@each $key in variables.$flex-sizes {
  .#{$key} {
    flex-#{$key}: 1;
  }
}

/**
Colors
**/

@each $key, $value in variables.$colors {
  .bg-#{$key} {
    background-color: $value;
  }

  .text-#{$key} {
    color: $value;
  }
}

/**
Shadow
**/

@each $key, $value in variables.$shadow {
  .shadow-#{$key} {
    box-shadow: $value;
  }
}

/**
Radius
**/

@each $key, $value in variables.$radius {
  .radius-#{$key} {
    border-radius: $value;
  }
}

/**
Headings
**/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-weight: variables.$font-weight-medium;
}

@each $key, $value in variables.$heading {
  #{$key} {
    font-size: $value;
  }
}

/**
Text
**/

@each $key, $value in variables.$font-size {
  .text-#{$key} {
    font-size: $value;
  }
}

/**
Overflow
**/

@each $key in variables.$overflow {
  .overflow-#{$key} {
    overflow: $key;
  }
}

/**
Position
**/

@each $key in variables.$position {
  .position-#{$key} {
    position: $key;
  }
}

/**
 * Icon
 */

.icon {
  width: 16px;
  height: 16px;
  object-fit: contain;
}

/**
Visibility
**/

@each $key in variables.$visibility {
  .#{$key} {
    visibility: $key;
  }
}

/********************************
Components
********************************/

/**
Button
**/

button {
  background-color: variables.$button-background-color;
  color: variables.$button-color;
  border: none;
  border-radius: variables.$button-radius;
  box-shadow: variables.$button-box-shadow;
  padding: variables.$button-padding;
  font-size: variables.$button-font-size;
  font-weight: variables.$button-font-weight;
  cursor: pointer;
  transition: background-color variables.$transition-speed;

  &:hover {
    background-color: variables.$button-hover-background-color;
  }

  &:disabled {
    opacity: 0.65;
    cursor: not-allowed;
  }

  &.ghost {
    background-color: transparent;
    border: none;

    &:hover {
      background-color: color.adjust(variables.$button-background-color, $lightness: 40%);
    }
  }

  &.outline {
    background-color: transparent;
    border: 1px solid variables.$secondary-color;
    color: variables.$secondary-color;

    &:hover {
      background-color: variables.$secondary-color;
      color: white;
    }
  }
}

/**
Link
**/

a {
  color: variables.$link-color;
  text-decoration: none;

  &:hover {
    color: variables.$link-hover-color;
  }

  &:disabled {
    opacity: 0.65;
    cursor: not-allowed;
  }
}

/**
Form
**/

form {
  width: 560px;
}

.form-group {
  display: flex;
  flex-direction: column;
  gap: 2px;

  label {
    flex: 1;
    font-size: map.get($map: variables.$font-size, $key: xs);
    color: color.adjust(variables.$neutral-color, $lightness: 20%);
    font-weight: 500;
  }

  input,
  select {
    flex: 1;
    font-size: map.get($map: variables.$font-size, $key: sm);
    border: 1px solid color.adjust(variables.$neutral-color, $lightness: 40%);
    padding: 10px;
    border-radius: variables.$radius;
  }
}

.form-grid {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 16px;
}
